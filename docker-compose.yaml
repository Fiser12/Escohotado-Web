services:
  web:
    container_name: web
    restart: always
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: runner
    ports:
      - 3000:3000
    platform: linux/amd64
    env_file: .docker.env
    environment:
      VIRTUAL_HOST: local.nexolabs.dev
      VIRTUAL_PORT: 3000
      VIRTUAL_PATH: /
      PUBLIC_AUTH_KEYCLOAK_ISSUER: https://auth.nexolabs.xyz/realms/Escohotado
    depends_on:
      - cms
    networks:
      - outside

  cms:
    container_name: cms
    restart: always
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      target: runner
    ports:
      - 3001:3000
    platform: linux/amd64
    env_file: .docker.env
    environment:
      VIRTUAL_HOST: local.nexolabs.dev
      VIRTUAL_PORT: 3000
      VIRTUAL_PATH: ~^/(api|admin|media|_next)
    depends_on:
      - mongo
    networks:
      - outside

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - outside
    env_file: .docker.env
    volumes:
      - ./volumes/mongo:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - outside

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - outside

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run
    env_file:
    - .docker.env
    restart: unless-stopped
    networks:
      - outside

volumes:
  conf:
  html:
  vhost:

networks:
  outside:
