/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    prices: Price;
    products: Product;
    media: Media;
    taxonomy: Taxonomy;
    pdf: Pdf;
    article_web: ArticleWeb;
    book: Book;
    video: Video;
    quote: Quote;
    ui_grid_cards: UiGridCard;
    ui_block: UiBlock;
    permission: Permission;
    'search-results': SearchResult;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    prices: {
      product: 'products';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    prices: PricesSelect<false> | PricesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    taxonomy: TaxonomySelect<false> | TaxonomySelect<true>;
    pdf: PdfSelect<false> | PdfSelect<true>;
    article_web: ArticleWebSelect<false> | ArticleWebSelect<true>;
    book: BookSelect<false> | BookSelect<true>;
    video: VideoSelect<false> | VideoSelect<true>;
    quote: QuoteSelect<false> | QuoteSelect<true>;
    ui_grid_cards: UiGridCardsSelect<false> | UiGridCardsSelect<true>;
    ui_block: UiBlockSelect<false> | UiBlockSelect<true>;
    permission: PermissionSelect<false> | PermissionSelect<true>;
    'search-results': SearchResultsSelect<false> | SearchResultsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    articulos_page: ArticulosPage;
    home_page: HomePage;
    videos_page: VideosPage;
  };
  globalsSelect: {
    articulos_page: ArticulosPageSelect<false> | ArticulosPageSelect<true>;
    home_page: HomePageSelect<false> | HomePageSelect<true>;
    videos_page: VideosPageSelect<false> | VideosPageSelect<true>;
  };
  locale: 'en' | 'es';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  email: string;
  emailVerified?: string | null;
  name?: string | null;
  image?: string | null;
  roles?: string[];
  isSubscribedToNewsletter: boolean;
  inventory?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  accounts?:
    | {
        id?: string | null;
        provider: string;
        providerAccountId: string;
        type: string;
      }[]
    | null;
  sessions?:
    | {
        id?: string | null;
        sessionToken: string;
        expires: string;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prices".
 */
export interface Price {
  id: number;
  stripeID: string;
  stripeProductId: string;
  product?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  active: boolean;
  description?: string | null;
  unitAmount: number;
  currency: string;
  type: 'one_time' | 'recurring';
  interval?: ('day' | 'week' | 'month' | 'year') | null;
  intervalCount?: number | null;
  trialPeriodDays?: number | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  stripeID: string;
  type?: ('good' | 'service') | null;
  active: boolean;
  name: string;
  description?: string | null;
  images?:
    | {
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  prices?: (number | Price)[] | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  features?:
    | {
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  permissions?: (number | Permission)[] | null;
  permissions_seeds?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "permission".
 */
export interface Permission {
  id: number;
  slug: string;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  title?: string | null;
  rawContent?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taxonomy".
 */
export interface Taxonomy {
  id: number;
  selectable?: boolean | null;
  singular_name: string;
  plural_name?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Taxonomy;
  breadcrumbs?:
    | {
        doc?: (number | null) | Taxonomy;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pdf".
 */
export interface Pdf {
  id: number;
  title: string;
  permissions?: (number | Permission)[] | null;
  permissions_seeds?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article_web".
 */
export interface ArticleWeb {
  id: number;
  permissions?: (number | Permission)[] | null;
  permissions_seeds?: string | null;
  cover?: (number | null) | Media;
  title: string;
  publishedAt?: string | null;
  categories?: (number | Taxonomy)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  source?: string | null;
  preview_content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  document?: (number | null) | Pdf;
  forum_post_id?: string | null;
  last_forum_sync?: string | null;
  last_forum_posts?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "book".
 */
export interface Book {
  id: number;
  title: string;
  publishedAt?: string | null;
  categories?: (number | Taxonomy)[] | null;
  description?: string | null;
  cover: number | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slug?: string | null;
  slugLock?: boolean | null;
  Ediciones?:
    | {
        link?: string | null;
        variant?: ('audiobook' | 'ebook' | 'book') | null;
        language?: ('es' | 'en') | null;
        id?: string | null;
      }[]
    | null;
  forum_post_id?: string | null;
  last_forum_sync?: string | null;
  last_forum_posts?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video".
 */
export interface Video {
  id: number;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  url: string;
  permissions?: (number | Permission)[] | null;
  url_free?: string | null;
  permissions_seeds?: string | null;
  tags?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  thumbnailUrl?: string | null;
  title?: string | null;
  viewCount?: number | null;
  duration?: number | null;
  publishedAt?: string | null;
  categories?: (number | Taxonomy)[] | null;
  forum_post_id?: string | null;
  last_forum_sync?: string | null;
  last_forum_posts?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quote".
 */
export interface Quote {
  id: number;
  quote: string;
  context?: string | null;
  source?:
    | ({
        relationTo: 'book';
        value: number | Book;
      } | null)
    | ({
        relationTo: 'video';
        value: number | Video;
      } | null)
    | ({
        relationTo: 'article_web';
        value: number | ArticleWeb;
      } | null);
  categories?: (number | Taxonomy)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ui_grid_cards".
 */
export interface UiGridCard {
  id: number;
  title?: string | null;
  tailwindGridClassNames?: string | null;
  cards?:
    | {
        tailwindClassNames: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ui_block".
 */
export interface UiBlock {
  id: number;
  title: string;
  block: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search-results".
 */
export interface SearchResult {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'video';
        value: number | Video;
      }
    | {
        relationTo: 'quote';
        value: number | Quote;
      }
    | {
        relationTo: 'article_web';
        value: number | ArticleWeb;
      }
    | {
        relationTo: 'book';
        value: number | Book;
      };
  tags?: string | null;
  permissions_seeds?: string | null;
  href?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'prices';
        value: number | Price;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'taxonomy';
        value: number | Taxonomy;
      } | null)
    | ({
        relationTo: 'pdf';
        value: number | Pdf;
      } | null)
    | ({
        relationTo: 'article_web';
        value: number | ArticleWeb;
      } | null)
    | ({
        relationTo: 'book';
        value: number | Book;
      } | null)
    | ({
        relationTo: 'video';
        value: number | Video;
      } | null)
    | ({
        relationTo: 'quote';
        value: number | Quote;
      } | null)
    | ({
        relationTo: 'ui_grid_cards';
        value: number | UiGridCard;
      } | null)
    | ({
        relationTo: 'ui_block';
        value: number | UiBlock;
      } | null)
    | ({
        relationTo: 'permission';
        value: number | Permission;
      } | null)
    | ({
        relationTo: 'search-results';
        value: number | SearchResult;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  id?: T;
  email?: T;
  emailVerified?: T;
  name?: T;
  image?: T;
  roles?: T;
  isSubscribedToNewsletter?: T;
  inventory?: T;
  accounts?:
    | T
    | {
        id?: T;
        provider?: T;
        providerAccountId?: T;
        type?: T;
      };
  sessions?:
    | T
    | {
        id?: T;
        sessionToken?: T;
        expires?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prices_select".
 */
export interface PricesSelect<T extends boolean = true> {
  stripeID?: T;
  stripeProductId?: T;
  product?: T;
  active?: T;
  description?: T;
  unitAmount?: T;
  currency?: T;
  type?: T;
  interval?: T;
  intervalCount?: T;
  trialPeriodDays?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  stripeID?: T;
  type?: T;
  active?: T;
  name?: T;
  description?: T;
  images?:
    | T
    | {
        url?: T;
        id?: T;
      };
  prices?: T;
  metadata?: T;
  features?:
    | T
    | {
        title?: T;
        id?: T;
      };
  permissions?: T;
  permissions_seeds?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  title?: T;
  rawContent?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taxonomy_select".
 */
export interface TaxonomySelect<T extends boolean = true> {
  selectable?: T;
  singular_name?: T;
  plural_name?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pdf_select".
 */
export interface PdfSelect<T extends boolean = true> {
  title?: T;
  permissions?: T;
  permissions_seeds?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article_web_select".
 */
export interface ArticleWebSelect<T extends boolean = true> {
  permissions?: T;
  permissions_seeds?: T;
  cover?: T;
  title?: T;
  publishedAt?: T;
  categories?: T;
  slug?: T;
  slugLock?: T;
  content?: T;
  source?: T;
  preview_content?: T;
  document?: T;
  forum_post_id?: T;
  last_forum_sync?: T;
  last_forum_posts?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "book_select".
 */
export interface BookSelect<T extends boolean = true> {
  title?: T;
  publishedAt?: T;
  categories?: T;
  description?: T;
  cover?: T;
  content?: T;
  slug?: T;
  slugLock?: T;
  Ediciones?:
    | T
    | {
        link?: T;
        variant?: T;
        language?: T;
        id?: T;
      };
  forum_post_id?: T;
  last_forum_sync?: T;
  last_forum_posts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video_select".
 */
export interface VideoSelect<T extends boolean = true> {
  content?: T;
  url?: T;
  permissions?: T;
  url_free?: T;
  permissions_seeds?: T;
  tags?: T;
  thumbnailUrl?: T;
  title?: T;
  viewCount?: T;
  duration?: T;
  publishedAt?: T;
  categories?: T;
  forum_post_id?: T;
  last_forum_sync?: T;
  last_forum_posts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quote_select".
 */
export interface QuoteSelect<T extends boolean = true> {
  quote?: T;
  context?: T;
  source?: T;
  categories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ui_grid_cards_select".
 */
export interface UiGridCardsSelect<T extends boolean = true> {
  title?: T;
  tailwindGridClassNames?: T;
  cards?:
    | T
    | {
        tailwindClassNames?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ui_block_select".
 */
export interface UiBlockSelect<T extends boolean = true> {
  title?: T;
  block?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "permission_select".
 */
export interface PermissionSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search-results_select".
 */
export interface SearchResultsSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  tags?: T;
  permissions_seeds?: T;
  href?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articulos_page".
 */
export interface ArticulosPage {
  id: number;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_page".
 */
export interface HomePage {
  id: number;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_page".
 */
export interface VideosPage {
  id: number;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articulos_page_select".
 */
export interface ArticulosPageSelect<T extends boolean = true> {
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_page_select".
 */
export interface VideosPageSelect<T extends boolean = true> {
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonsBlock".
 */
export interface ButtonsBlock {
  buttons?:
    | {
        label?: string | null;
        type_of_button_style?: ('primary_fill' | 'secondary_fill' | 'primary_line' | 'secondary_line') | null;
        type_of_button_link?: ('collections' | 'static' | 'external') | null;
        collections?: {
          relationTo: 'search-results';
          value: number | SearchResult;
        } | null;
        static?:
          | (
              | '/subscriptions'
              | '/cuenta'
              | '/lecturas'
              | '/videos'
              | '/citas'
              | '/'
              | '/privacidad'
              | '/terminos-y-condiciones'
            )
          | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  alignment?: ('left' | 'center' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'buttons_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightBlock".
 */
export interface HighlightBlock {
  content?: string | null;
  background_style?: ('primary' | 'secondary') | null;
  buttons?:
    | {
        label?: string | null;
        type_of_button_style?: ('primary_fill' | 'secondary_fill' | 'primary_line' | 'secondary_line') | null;
        type_of_button_link?: ('collections' | 'static' | 'external') | null;
        collections?: {
          relationTo: 'search-results';
          value: number | SearchResult;
        } | null;
        static?:
          | (
              | '/subscriptions'
              | '/cuenta'
              | '/lecturas'
              | '/videos'
              | '/citas'
              | '/'
              | '/privacidad'
              | '/terminos-y-condiciones'
            )
          | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'highlight_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BookCarouselBlock".
 */
export interface BookCarouselBlock {
  title: string;
  books: (number | Book)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'books_carousel_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UIBlock".
 */
export interface UIBlock {
  type_of_permissions?: ('all' | 'roles' | 'only_no_roles' | 'only_guess') | null;
  permissions?: {
    relationTo: 'permission';
    value: number | Permission;
  } | null;
  displayMode?: ('sequential' | 'rotational') | null;
  windowSize?: number | null;
  uiBlocks?:
    | {
        relationTo: 'ui_block';
        value: number | UiBlock;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ui_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GridCardsBlock".
 */
export interface GridCardsBlock {
  queryField: (
    | {
        value: (
          | {
              relationTo: 'article_web';
              value: number | ArticleWeb;
            }
          | {
              relationTo: 'book';
              value: number | Book;
            }
          | {
              relationTo: 'quote';
              value: number | Quote;
            }
          | {
              relationTo: 'video';
              value: number | Video;
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'staticQueryField';
      }
    | {
        value: {
          relationTo: 'media';
          value: number | Media;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaQueryField';
      }
    | {
        filter?: string | null;
        querySize: number;
        sort: 'publishedAt' | 'popularity';
        id?: string | null;
        blockName?: string | null;
        blockType: 'articleQueryBlock';
      }
    | {
        filter?: string | null;
        querySize: number;
        sort: 'publishedAt' | 'popularity';
        id?: string | null;
        blockName?: string | null;
        blockType: 'videoQueryBlock';
      }
    | {
        filter?: string | null;
        filterByQuoteOrigin?:
          | ({
              relationTo: 'book';
              value: number | Book;
            } | null)
          | ({
              relationTo: 'video';
              value: number | Video;
            } | null)
          | ({
              relationTo: 'article_web';
              value: number | ArticleWeb;
            } | null);
        querySize: number;
        sort: 'publishedAt' | 'popularity';
        id?: string | null;
        blockName?: string | null;
        blockType: 'quoteQueryBlock';
      }
  )[];
  gridCards: number | UiGridCard;
  id?: string | null;
  blockName?: string | null;
  blockType: 'grid_cards_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock".
 */
export interface HeroBlock {
  media: number | Media;
  inverted?: boolean | null;
  media_type?: ('normal' | 'muted') | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PhotosCarouselBlock".
 */
export interface PhotosCarouselBlock {
  items?:
    | {
        cover: number | Media;
        title?: string | null;
        year?: number | null;
        description?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'photos_carousel_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumnsBlock".
 */
export interface TwoColumnsBlock {
  type: '1x3' | '2x2' | '3x1';
  left: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  right: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'two_columns_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WrapperBlock".
 */
export interface WrapperBlock {
  type_of_permissions?: ('all' | 'roles' | 'only_no_roles' | 'only_guess') | null;
  permissions?: {
    relationTo: 'permission';
    value: number | Permission;
  } | null;
  type?: ('white' | 'gray') | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'wrapper_block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}